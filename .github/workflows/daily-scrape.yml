name: Daily Scraping Job

#on:
 # schedule:
    # Run at 8:00 AM IST (2:30 UTC) every day
    #- cron: '30 2 * * *'
  #workflow_dispatch:  # Allows manual triggering for testing

jobs:
  scrape-and-create-sets:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install MongoDB
        uses: supercharge/mongodb-github-action@v1.10.0
        with:
          mongodb-version: '4.4'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Install requests with security packages
          python -m pip install requests[security]
          # Disable warnings about insecure requests
          python -c "import urllib3; urllib3.disable_warnings()"
      
      - name: Check environment
        run: |
          echo "Checking Python version:"
          python --version
          echo "Checking installed packages:"
          pip list
          echo "Checking MongoDB:"
          mongod --version || echo "MongoDB server not installed (using MongoDB GitHub Action)"
          echo "Checking directory structure:"
          ls -la
          
      - name: Run automated scraper
        env:
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_VERIFY_SSL: "false"
          MONGO_URI: ${{ secrets.MONGO_URI }}
          MAX_WORKER_THREADS: "4"
          LOG_LEVEL: "DEBUG"  # More verbose logging
        run: |
          # Test database connection first
          python -c "from db_utils import test_connection; test_connection()" || echo "Connection test failed but continuing with scraper"
          # Run the automated scraper
          python automated_scraper.py 
